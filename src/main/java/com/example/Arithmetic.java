package com.example;
/**
 * ????-??????????? ???????? ?????????, ??????? ????? ????????? ?? ???? ?????? ??
 * ?????????/??????????/?????????? ??? ???????? ???? ?????. ??????? ???????????? ???????? ????? ?
 * ???????? ? ????? ????????? ???????? ??? ????? ??????. ???????????? ??????? - ?????????????
 * ??????: ?????? + ?????????. ?????? 1: ????: 2+2 ?????: 4 ?????? 2: ???? 2*? ?????: ?????????
 * ?????? ??????????? (???????????? ???????????????? ???????)
 * <p>
 * ???????????? ?????????: ??????????, ???? ??????, ?????????? ?????, ????????, ???????? (?? ?
 * ?????????) ????????, ??????, ?????????, ???????????? (? ?????? ?????? ?????????????),
 * ??????????????? ????? ????????, ??????????, ?????? ? ???????? ????????? ????????, ?????????? ??
 * ????? ???? ? ??????????? ?? ??????? ?????????? ????? ????????? ??? ?????? ????????, ??? ? ??????)
 * ??? ??????? ?? ?????????? ??????? ???????.
 */

import com.example.enumClass.ValidationResult;
import com.example.validation.Parser;
import com.example.validation.Validation;

import java.util.Scanner;

public class Arithmetic extends Validation {

    private static int valueToOpCode(String opSign) {
        //Operations operations  = new Operations();
        //opSign.codePointAt()
        char op = opSign.charAt(0);
        switch (op) {
            case '+':
                return 1;
            case '*':
                return 3;
            case '/':
                return 4;
            case '-':
                return 2;

            default:
                throw new RuntimeException("Некорректный формат введённых данных.");

        }
    }

    public static void main(String[] args) {
        String example1 = "";

        System.out.println(
            "Введите строку по шаблону: Ч О Ч, где Ч - число, а О - знак операции(+,-,/,*). Если вы хотите выйти из программы введите y.");
        Scanner scanner = new Scanner(System.in);

        Validation validation = new Validation();

        while (true) {
            example1 = scanner.nextLine();
            ValidationResult result = validation.validateLine(example1);
            if (example1.equals("y")) {
                System.out.println("Программа завершена.");
                break;
            }
            if (result == ValidationResult.OK) {
                String[] tokens = Parser.tokenize(example1);
                Calculator calculator = new Calculator();

                double arg1 = Double.parseDouble(tokens[0]);
                double arg2 = Double.parseDouble(tokens[2]);

                int opCode = valueToOpCode(tokens[1]);

                String rv = calculator.calculate(arg1, arg2, opCode);
                System.out.println(example1 + " = " + rv);
            } else {

                System.err.println(result.getErrorText());
            }
        }
    }
}